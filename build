#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -eou pipefail

BUILD_DIR="./dist"

function get_asset_md5sums {
  find . \
    -type f \
    ! -path "./.git/*" \
    ! -path "${BUILD_DIR}/*" \
    \( -iname "*.css" -o \
       -iname "*.js" -o \
       -iname "*.avif" -o \
       -iname "*.bmp" -o \
       -iname "*.gif" -o \
       -iname "*.heif" -o \
       -iname "*.jpeg" -o \
       -iname "*.jpg" -o \
       -iname "*.png" -o \
       -iname "*.svg" -o \
       -iname "*.webp" \
    \) \
    -exec md5sum '{}' +
}

function get_html_files {
  find . \
    -type f \
    ! -path "./.git/*" \
    ! -path "${BUILD_DIR}/*" \
    -iname "*.html"
}

function main {
  # Recreate build dir
  rm -rf "${BUILD_DIR}" && mkdir -p "${BUILD_DIR}"

  assets_array=()

  # Get all asset MD5 checksums, put them into an assets array for later use,
  # and write each file to a new file with the checksum in the name.
  while read -r sum file; do
    file_name="${file%.*}"
    file_ext="${file##*.}"
    file_with_sum="${file_name}.${sum}.${file_ext}"

    assets_array+=( "${file}=${file_with_sum}" )

    cat "${file}" > "${BUILD_DIR}/${file_with_sum}"
  done < <(get_asset_md5sums)

  # Get each HTML file, go through each line of each HTML file, and
  # when you come across a line that has a value in the assets array,
  # update that line, then output the updated HTML file lines to a new
  # HTML file in the build dir.
  while read -r file; do
    while IFS='' read -r line; do
      line_updated="${line}"

      for val in "${assets_array[@]}"; do
        file_name_original=$(echo "${val}" | cut -d "=" -f 1)
        file_name_summed=$(echo "${val}" | cut -d "=" -f 2)

        if [[ "${line}" =~ ${file_name_original} ]]; then
          line_updated=$(echo "${line}" | sed -E 's@'"${file_name_original}"'@'"${file_name_summed}"'@g')
          break
        fi
      done

      echo "${line_updated}"
    done < "${file}" > "${BUILD_DIR}/${file}"
  done < <(get_html_files)
}

main
